<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Chandler</name>
    </assembly>
    <members>
        <member name="T:Chandler.Controllers.AccountController">
            <summary>
            Login api controller
            </summary>
        </member>
        <member name="P:Chandler.Controllers.AccountController.SignInManager">
            <summary>
            SignInManager for Accounts
            </summary>
        </member>
        <member name="M:Chandler.Controllers.AccountController.#ctor(Chandler.ServerConfig,Chandler.Data.Database,Microsoft.AspNetCore.Identity.UserManager{Chandler.Data.Entities.ChandlerUser},Microsoft.AspNetCore.Identity.SignInManager{Chandler.Data.Entities.ChandlerUser})">
            <summary>
            Ctor
            </summary>
            <param name="conf">Server Config</param>
            <param name="db">Database</param>
            <param name="usermanager">User Manager</param>
            <param name="signmanager">Sign In Manager</param>
        </member>
        <member name="M:Chandler.Controllers.AccountController.LoginAsync(Chandler.Data.Entities.AccountDetailsBody)">
            <summary>
            Log a user in
            </summary>
            <param name="details">Login details of the user. Username/Email and Password</param>
            <returns>ChandlerUser object on success</returns>
            <response code="400">If either the username or email are invalid</response>
            <response code="429">If too many logins were attempted</response>
        </member>
        <member name="M:Chandler.Controllers.AccountController.LogoutAsync">
            <summary>
            Log the current user out
            </summary>
            <returns>Empty Response</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountController.RegisterAccountAsync(Chandler.Data.Entities.AccountDetailsBody)">
            <summary>
            Registers a new account
            </summary>
            <param name="details">Post body details of the new user. Username, email, and password.</param>
            <returns>ChandlerUser object on success</returns>
            <response code="400">If any of the query parameters are null or if the email has already been registered</response>
            <response code="500">If there is an error when creating the new user account</response>
        </member>
        <member name="M:Chandler.Controllers.AccountController.DeleteAccountAsync(System.Security.Claims.ClaimsPrincipal,Chandler.Data.Entities.AccountDetailsBody)">
            <summary>
            Deletes an account
            </summary>
            <param name="usrclaim">Current user's claims</param>
            <param name="details">Account details</param>
            <returns>200 OK on deletion</returns>
        </member>
        <member name="T:Chandler.Controllers.BoardController">
            <summary>
            Board Object
            </summary>
        </member>
        <member name="M:Chandler.Controllers.BoardController.#ctor(Chandler.Data.Database)">
            <summary>
            Board ctor
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Chandler.Controllers.BoardController.GetBoardList">
            <summary>
            Returns a list of boards
            </summary>
            <returns>IEnumerable of Board</returns>
        </member>
        <member name="M:Chandler.Controllers.BoardController.GetBoardInfo(System.String)">
            <summary>
            Returns data on a board
            </summary>
            <param name="tag">The tag of the board</param>
            <returns>Board</returns>
        </member>
        <member name="T:Chandler.Controllers.ServerController">
            <summary>
            Server object
            </summary>
        </member>
        <member name="M:Chandler.Controllers.ServerController.#ctor(Chandler.Data.Database,Chandler.Data.ServerMeta)">
            <summary>
            Server Ctor
            </summary>
            <param name="database"></param>
            <param name="meta"></param>
        </member>
        <member name="M:Chandler.Controllers.ServerController.GetServerMeta">
            <summary>
            Get server meta
            </summary>
            <returns>ServerMeta</returns>
        </member>
        <member name="M:Chandler.Controllers.ServerController.GetHealthStatus">
            <summary>
            Returns the status of the server
            </summary>
            <returns>ServerHealth Object</returns>
        </member>
        <member name="T:Chandler.Controllers.ThreadController">
            <summary>
            Api Controller For Threads
            </summary>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.#ctor(Chandler.Data.Database,Chandler.ServerConfig)">
            <summary>
            Thread API Ctor
            </summary>
            <param name="database"></param>
            <param name="conf"></param>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.GetThreads(System.String,System.Boolean)">
            <summary>
            Returns a list of threads for a given board
            </summary>
            <param name="tag">The board tag</param>
            <param name="includechildren">Whether or not to include the children to a thread</param>
            <returns>IEnunmerable of Thread or empty</returns>
            <response code="200">If the board was found successfully</response>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.GetSingleThread(System.Int32,System.Boolean)">
            <summary>
            Gets a thread by its ID
            </summary>
            <param name="id">The ID of the thread</param>
            <param name="includechildren">Whether or not to include the children to a thread</param>
            <returns>Thread or empty</returns>
            <response code="200">If the thread was found</response>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.GetPosts(System.Int32)">
            <summary>
            Gets child posts on a given thread
            </summary>
            <param name="id"></param>
            <returns>List of children threads (IEnumerable of Thread)</returns>
            <response code="200">If the thread was found</response>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.CreatePost(Chandler.Data.Entities.Thread)">
            <summary>
            Creates a post from post body content
            </summary>
            <param name="newpost">Thread Body</param>
            <returns>Newly posted thread</returns>
            <response code="200">If the thread was created successfully</response>
        </member>
        <member name="M:Chandler.Controllers.ThreadController.DeletePost(System.Int32,System.String)">
            <summary>
            Delete a post via delete request type
            </summary>
            <param name="postid">ID of the most to delete</param>
            <param name="pass">Password to the thread</param>
            <returns>True if thread was deleted</returns>
            <response code="200">If the thread was created successfully</response>
        </member>
        <member name="T:Chandler.Controllers.WebhooksController">
            <summary>
            Webhook controller
            </summary>
        </member>
        <member name="M:Chandler.Controllers.WebhooksController.#ctor(Chandler.Data.Database)">
            <summary>
            Webhook Ctor
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Chandler.Controllers.WebhooksController.ParseWebhook(System.String)">
            <summary>
            Parses a webhook url into its Id and Token
            </summary>
            <param name="url">The webhook url you wish to parse</param>
            <returns>Id and Token as a tuple</returns>
        </member>
        <member name="M:Chandler.Controllers.WebhooksController.SubscribeWebhook(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Subscribes a webhook to the given thread or board
            </summary>
            <param name="url">The webhook's URL</param>
            <param name="boardtag">The tag of the board to listen to</param>
            <param name="threadid">The ID of the thread to listen to</param>
            <returns>WebhookSubscription Object</returns>
            <response code="400">When no board tag or thread id has been sent, the url is empty, the url is in valid, the board/thread doesnt exist, or when the webhook has already been assigned to the board/thread</response>
        </member>
        <member name="M:Chandler.Controllers.WebhooksController.UnSubscribeWebhook(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Ubsubscribes a webhook
            </summary>
            <param name="url">Webhook's URL</param>
            <param name="boardtag">The tag of the board to unsub from</param>
            <param name="threadid">The Id of the thread to unsub from</param>
            <returns>200 OK on success</returns>
            <response code="400">When ID is invalid or password is incorrect</response>
        </member>
        <member name="T:Chandler.Controllers.AccountPageController">
            <summary>
            Controller for pages relating to accounts
            </summary>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.#ctor(Chandler.ServerConfig,Chandler.Data.Database,Chandler.Controllers.AccountController)">
            <summary>
            Ctor
            </summary>
            <param name="conf">Server Config</param>
            <param name="db">Database</param>
            <param name="login">Login API Controller</param>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.LoginWithDiscord">
            <summary>
            Login using discord
            </summary>
            <returns>Discord Challenge</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.Login">
            <summary>
            Returns login page
            </summary>
            <returns>Login Page View</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.LoginWithPost(System.String,System.String)">
            <summary>
            Login via form
            </summary>
            <param name="UsernameOrEmail">Username or Email</param>
            <param name="Password">Password</param>
            <returns></returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.Register">
            <summary>
            Return register page
            </summary>
            <returns>Returns register page</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.RegisterWithPost(System.String,System.String,System.String)">
            <summary>
            Register via form
            </summary>
            <param name="Username"></param>
            <param name="Email"></param>
            <param name="Password"></param>
            <returns></returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.Logout">
            <summary>
            Logout
            </summary>
            <returns>Index page</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.Delete">
            <summary>
            Delete account page
            </summary>
            <returns>DeleteAccount Page</returns>
        </member>
        <member name="M:Chandler.Controllers.AccountPageController.DeleteFromPost(System.String,System.String)">
            <summary>
            Deletes account
            </summary>
            <param name="UsernameOrEmail">Username or Email of the user</param>
            <param name="Password">Password of the user</param>
            <returns>IndexPage</returns>
        </member>
        <member name="T:Chandler.Controllers.PageController">
            <summary>
            Page Controller
            </summary>
        </member>
        <member name="M:Chandler.Controllers.PageController.#ctor(Chandler.Data.Database,Chandler.ServerConfig,Chandler.Controllers.ThreadController,Chandler.Controllers.WebhooksController,Microsoft.AspNetCore.Identity.SignInManager{Chandler.Data.Entities.ChandlerUser},Microsoft.AspNetCore.Identity.UserManager{Chandler.Data.Entities.ChandlerUser})">
            <summary>
            Page Ctor
            </summary>
            <param name="db">Database Model</param>
            <param name="config">Server Configuration</param>
            <param name="threadcontroller">API Thread Controller</param>
            <param name="webhookscontroller">API Webhook Controller</param>
            <param name="signIn">Sign in manager</param>
            <param name="userManager">User manager</param>
        </member>
        <member name="M:Chandler.Controllers.PageController.Index">
            <summary>
            Main index page
            </summary>
            <returns>Index Page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.Board(System.String,System.Int32,Chandler.Data.Entities.ApiActionStatus)">
            <summary>
            Board page
            </summary>
            <param name="tag">Board Tag</param>
            <param name="p">Page to load</param>
            <param name="status">Api Action status to return with view</param>
            <returns>Board page for the given board tag</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.Thread(System.Int32)">
            <summary>
            Thread page
            </summary>
            <param name="id">Thread id</param>
            <returns>Thread page for the given thread id</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.New(System.String,System.Int32,System.Int64,System.Boolean)">
            <summary>
            New thread page
            </summary>
            <param name="board">board tag</param>
            <param name="parent_id">Id of the parent thread</param>
            <param name="replytoid">Id of the thread this post is replying to</param>
            <param name="isthreadreply">Whether or not the post is a direct reply to the main thread</param>
            <returns>New thread page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.Delete(System.String,System.Int32)">
            <summary>
            Delete thread page
            </summary>
            <param name="board_tag">Board tag</param>
            <param name="id">Id of the thread</param>
            <returns>Board page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.Webhooks">
            <summary>
            Webhook page
            </summary>
            <returns>Webhook page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.Board(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
            Creates a new thread and returns to the board page
            </summary>
            <param name="boardtag">Board tag</param>
            <param name="text">Message text</param>
            <param name="parent_id">Parent Id of the thread</param>
            <param name="username">Username to display</param>
            <param name="topic">Topic of the thread</param>
            <param name="password">Password to delete the post</param>
            <param name="imageurl">Url for the post's image</param>
            <param name="replytoid">Id of the post this post is replying to</param>
            <returns>Board page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.DeletePostFromQuery(System.Int32,System.String,System.String)">
            <summary>
            Deletes a post using a query
            </summary>
            <param name="postid">The id of the post to delete</param>
            <param name="password">Password to delete the post</param>
            <param name="board_tag">Board tag</param>
            <returns>Board page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.FormSub(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new webhook link and returns to the base server address
            </summary>
            <param name="url">Webhook URL</param>
            <param name="boardtag">Board tag to listen to </param>
            <param name="threadid">Thread Id to listen to</param>
            <returns>Main Index Page</returns>
        </member>
        <member name="M:Chandler.Controllers.PageController.FormUnsub(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a webhook link and returns to the base server address
            </summary>
            <param name="url">URL of the webhook</param>
            <param name="boardtag">Tag of the board</param>
            <param name="threadid">ID of the thread</param>
            <returns>Main Index Page</returns>
        </member>
        <member name="T:Chandler.Data.Database">
            <summary>
            Database Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Database.Boards">
            <summary>
            List of boards
            </summary>
        </member>
        <member name="P:Chandler.Data.Database.Threads">
            <summary>
            List of threads
            </summary>
        </member>
        <member name="P:Chandler.Data.Database.Passwords">
            <summary>
            List of passwords
            </summary>
        </member>
        <member name="P:Chandler.Data.Database.WebhookSubscritptions">
            <summary>
            List of webhook subscriptions
            </summary>
        </member>
        <member name="M:Chandler.Data.Database.#ctor(Chandler.Data.Entities.DatabaseProvider,System.String)">
            <summary>
            DatabaseContext Ctor
            </summary>
            <param name="provider">Database Provider</param>
            <param name="cstring">Database Connection String</param>
        </member>
        <member name="M:Chandler.Data.Database.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Overridden version of OnConfiguring
            </summary>
            <param name="optionsBuilder">DbContextOptionsBuilder</param>
        </member>
        <member name="T:Chandler.Data.Entities.AdminInfo">
            <summary>
            Admin object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AdminInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AdminInfo.IsServerAdmin">
            <summary>
            Whether or not the user is an Admin of the entire server
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AdminInfo.IsBoardAdmin">
            <summary>
            Whether or not the user is the Admin of a board
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AdminInfo.AdminOf">
            <summary>
            The board the user is an admin of, if any.
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.Board">
            <summary>
            Board Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Board.Tag">
            <summary>
            The tag name for the board
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Board.Name">
            <summary>
            The actual name for the board
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Board.Description">
            <summary>
            The description for the board
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Board.ImageUrl">
            <summary>
            The image url for the board
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Board.Motd">
            <summary>
            The board's message of the day
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.ChandlerUser">
            <summary>
            ChandlerUser object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ChandlerUser.AdminInfo">
            <summary>
            Information about the admin status of the user
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ChandlerUser.DiscordId">
            <summary>
            The Discord Snowflake Id of the user who signed in using discord
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.DatabaseProvider">
            <summary>
            Database Provider Enum
            </summary>
        </member>
        <member name="F:Chandler.Data.Entities.DatabaseProvider.PostgreSql">
            <summary>
            Use PostgreSQL
            </summary>
        </member>
        <member name="F:Chandler.Data.Entities.DatabaseProvider.Sqlite">
            <summary>
            Use SQLite
            </summary>
        </member>
        <member name="F:Chandler.Data.Entities.DatabaseProvider.InMemory">
            <summary>
            Use an in memory datebase
            </summary>
        </member>
        <member name="F:Chandler.Data.Entities.DatabaseProvider.SqlServer">
            <summary>
            Use an SqlServer
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.Password">
            <summary>
            Password Table Class
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Password.Id">
            <summary>
            Id of the password (Public key)
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Password.Hash">
            <summary>
            Password Hash
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Password.Salt">
            <summary>
            Password Salt
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.Thread">
            <summary>
            Thread Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Id">
            <summary>
            ID of the thread
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.ParentId">
            <summary>
            The ID to the parent of the thread (-1 if the thread has no parent)
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.UserId">
            <summary>
            The ID of the user who posted the thread ('-1' if the thread was posted anonymously)
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.BoardTag">
            <summary>
            The tag for the board this post belongs to
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Image">
            <summary>
            The image url for this thread
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Username">
            <summary>
            The name of the user who posted the thread ("Anonymous" by default)
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Topic">
            <summary>
            The thread's topic
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Text">
            <summary>
            The main message content for the thread
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.Ip">
            <summary>
            The IP Address of the poster
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.GeneratePassword">
            <summary>
            The gernated password hash
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.PasswordId">
            <summary>
            The ID of the password in the database
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.ReplyToId">
            <summary>
            The ID of the post to reply to. Required when mentioning another post using ">>ID".
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.IsCommentReply">
            <summary>
            Whether or not the comment is a reply
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Thread.ChildThreads">
            <summary>
            Child threads for this thread
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.WebhookSubscription">
            <summary>
            Webhook Subscription Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.WebhookSubscription.Id">
            <summary>
            ID of the webhook subscription
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.WebhookSubscription.Token">
            <summary>
            The token for the webhook
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.WebhookSubscription.WebhookId">
            <summary>
            id for the webhook
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.WebhookSubscription.BoardTag">
            <summary>
            The board tag to listen to
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.WebhookSubscription.ThreadId">
            <summary>
            The ID of the thread to listen to
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.DiscordOAuthSettings">
            <summary>
            Settings for discord oauth
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.DiscordOAuthSettings.ClientId">
            <summary>
            Application Client ID
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.DiscordOAuthSettings.ClientSecret">
            <summary>
            Application Client Secret
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.DiscordOAuthSettings.RedirectUri">
            <summary>
            Application Redirect URI
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.DiscordWebhookBody">
            <summary>
            Webhook Body Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.DiscordWebhookBody.Content">
            <summary>
            Message content
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.DiscordWebhookBody.Embed">
            <summary>
            Message Embed
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.Embed">
            <summary>
            Discord Embed Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Title">
            <summary>
            Embed Title
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Type">
            <summary>
            Embed Type
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Description">
            <summary>
            Embed Description
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Url">
            <summary>
            Embed Url
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Timestamp">
            <summary>
            Embed Timestamp
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.Embed.Colour">
            <summary>
            Embed Colour
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.AccountDetailsBody">
            <summary>
            Account details body object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AccountDetailsBody.Username">
            <summary>
            Account username
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AccountDetailsBody.Email">
            <summary>
            Account email
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.AccountDetailsBody.Password">
            <summary>
            Account password
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.ApiActionStatus">
            <summary>
            ApiActionError
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ApiActionStatus.Title">
            <summary>
            Title of the message
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ApiActionStatus.ResponseCode">
            <summary>
            Http response code
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ApiActionStatus.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.ServerHealth">
            <summary>
            Server Health Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.OverallStatus">
            <summary>
            Overall status (Pass or Fail)
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.DatabaseOk">
            <summary>
            If the database is connected to or not
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.Output">
            <summary>
            The output message for errors
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.Latency">
            <summary>
            Latency on this request
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.Version">
            <summary>
            Server Version
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.ServerHealth.Uptime">
            <summary>
            Total Uptime of the server
            </summary>
        </member>
        <member name="T:Chandler.Data.Entities.SiteConfig">
            <summary>
            Site Config Object
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.SiteName">
            <summary>
            Name for the site
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.SiteFavicon">
            <summary>
            The favicon for the stie
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.SiteLogo">
            <summary>
            The logo for the site
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.AdminUsername">
            <summary>
            Username for server admin
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.AdminEmail">
            <summary>
            Username for server admin
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.AdminPassword">
            <summary>
            Username for server admin
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.DefaultPassword">
            <summary>
            The default master password for threads and admin user
            </summary>
        </member>
        <member name="P:Chandler.Data.Entities.SiteConfig.BaseUrl">
            <summary>
            Base url of the server the application is running on
            </summary>
        </member>
        <member name="T:Chandler.Data.AccountHelper">
            <summary>
            Helper class for accounts
            </summary>
        </member>
        <member name="M:Chandler.Data.AccountHelper.#ctor(Microsoft.AspNetCore.Identity.UserManager{Chandler.Data.Entities.ChandlerUser})">
            <summary>
            Ctor
            </summary>
            <param name="usermanager">User Manager</param>
        </member>
        <member name="M:Chandler.Data.AccountHelper.FindUserAsync(System.String,System.String)">
            <summary>
            Find a user
            </summary>
            <param name="username">Username of the user to find</param>
            <param name="email">Email of the user to find</param>
            <returns></returns>
        </member>
        <member name="T:Chandler.Data.Passworder">
            <summary>
            Static class for hashing passwords
            </summary>
        </member>
        <member name="M:Chandler.Data.Passworder.GenerateHash(System.String,System.String)">
            <summary>
            Generate a hash
            </summary>
            <param name="input">Text Input</param>
            <param name="pepper">Unique string known only to the server</param>
            <returns>Generated Hash</returns>
        </member>
        <member name="M:Chandler.Data.Passworder.VerifyPassword(System.String,System.String,System.String,System.String)">
            <summary>
            Compares text input to the given hash
            </summary>
            <param name="input">Text Input</param>
            <param name="salt">Hash Salt</param>
            <param name="pepper">Unique string known only to the server</param>
            <param name="hash">Hash to compare to</param>
            <returns>True, if text matches hash</returns>
        </member>
        <member name="T:Chandler.Data.Webhooker">
            <summary>
            Webhook helper for sending posts to a webhook
            </summary>
        </member>
        <member name="M:Chandler.Data.Webhooker.SendContentToAllAsync(Chandler.Data.Database,Chandler.Data.Entities.Thread)">
            <summary>
            Posts the message to the discord webhook
            </summary>
            <param name="ctx">Database Context</param>
            <param name="thread">The new thread being posted</param>
            <returns></returns>
        </member>
        <member name="M:Chandler.Data.Webhooker.SendBodyAsync(Chandler.Data.Entities.WebhookSubscription,Chandler.Data.Entities.DiscordWebhookBody)">
            <summary>
            Posts the message to the discord webhook
            </summary>
            <param name="sub">The webhook subscription to use</param>
            <param name="body">Full post body object</param>
            <returns></returns>
        </member>
        <member name="M:Chandler.Data.Webhooker.SendEmbedAsync(Chandler.Data.Entities.WebhookSubscription,Chandler.Data.Entities.Embed)">
            <summary>
            Posts the embed and content to the discord webhook
            </summary>
            <param name="sub">The webhook subscription to use</param>
            <param name="embed">The embed to post</param>
            <returns></returns>
        </member>
        <member name="T:Chandler.Data.ServerMeta">
            <summary>
            Server Meta
            </summary>
        </member>
        <member name="P:Chandler.Data.ServerMeta.StartTime">
            <summary>
            Time the server started
            </summary>
        </member>
        <member name="P:Chandler.Data.ServerMeta.UpTime">
            <summary>
            Total amount of time the server has been active for
            </summary>
        </member>
        <member name="M:Chandler.Data.ServerMeta.#ctor">
            <summary>
            ServerMeta ctor
            </summary>
        </member>
        <member name="T:Chandler.ServerConfig">
            <summary>
            Server Configuration Object
            </summary>
        </member>
        <member name="P:Chandler.ServerConfig.Provider">
            <summary>
            Database Provider
            </summary>
        </member>
        <member name="P:Chandler.ServerConfig.ConnectionString">
            <summary>
            Connection string for the database
            </summary>
        </member>
        <member name="P:Chandler.ServerConfig.SiteConfig">
            <summary>
            Configuration for the site
            </summary>
        </member>
        <member name="P:Chandler.ServerConfig.DiscordOAuthSettings">
            <summary>
            Configuration for discord oauth
            </summary>
        </member>
        <member name="T:Chandler.Models.DeletePageModel">
            <summary>
            Delete Page Model
            </summary>
        </member>
        <member name="P:Chandler.Models.DeletePageModel.PostId">
            <summary>
            Id of the post to delte
            </summary>
        </member>
        <member name="P:Chandler.Models.DeletePageModel.Password">
            <summary>
            Password for the post
            </summary>
        </member>
        <member name="P:Chandler.Models.DeletePageModel.BoardTag">
            <summary>
            Board this post belongs to
            </summary>
        </member>
        <member name="P:Chandler.Models.DeletePageModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="T:Chandler.Models.NewPostPageModel">
            <summary>
            New Post Page Model
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.BoardTag">
            <summary>
            Board to post to
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.ParentId">
            <summary>
            Id of the thread this post belongs to
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.ReplyToId">
            <summary>
            Id of the post this post is replying to
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.IsCommentReply">
            <summary>
            Whether or not the post a reply to a main thread comment
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.IsThreadReply">
            <summary>
            Is the post a reply to the main thread
            </summary>
        </member>
        <member name="P:Chandler.Models.NewPostPageModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="T:Chandler.Models.BoardPageModel">
            <summary>
            Board Page Model
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.BoardInfo">
            <summary>
            Info for the board
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.Threads">
            <summary>
            Threads belonging to the board
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.BigThreads">
            <summary>
            Thread IDs for Threads with more than 5 responses
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.PageCount">
            <summary>
            Amount of pages available
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.Currentpage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.MaxThreadsPerPage">
            <summary>
            Max threads per board page
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="P:Chandler.Models.BoardPageModel.ActionStatus">
            <summary>
            Status of an Api action
            </summary>
        </member>
        <member name="T:Chandler.Models.IndexPageModel">
            <summary>
            Index Page Model
            </summary>
        </member>
        <member name="P:Chandler.Models.IndexPageModel.Boards">
            <summary>
            List of avaliable board
            </summary>
        </member>
        <member name="P:Chandler.Models.IndexPageModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="P:Chandler.Models.IndexPageModel.ActionStatus">
            <summary>
            The status of an api action
            </summary>
        </member>
        <member name="T:Chandler.Models.MetadataViewModel">
            <summary>
            This model gets used in the partial view for metadata
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.Title">
            <summary>
            Page title
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.RelativeUrl">
            <summary>
            Page url (relative)
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.Image">
            <summary>
            Image url
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.ImageRelative">
            <summary>
            Whether the img url is relative
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.Description">
            <summary>
            Page description
            </summary>
        </member>
        <member name="P:Chandler.Models.MetadataViewModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="T:Chandler.Models.ThreadPageModel">
            <summary>
            Board Page Model
            </summary>
        </member>
        <member name="P:Chandler.Models.ThreadPageModel.BoardInfo">
            <summary>
            Info for the board
            </summary>
        </member>
        <member name="P:Chandler.Models.ThreadPageModel.Thread">
            <summary>
            Threads belonging to the board
            </summary>
        </member>
        <member name="P:Chandler.Models.ThreadPageModel.Config">
            <summary>
            Configuration for the server
            </summary>
        </member>
        <member name="T:Chandler.Models.WebhooksPageModel">
            <summary>
            Webhooks page model
            </summary>
        </member>
        <member name="P:Chandler.Models.WebhooksPageModel.Config">
            <summary>
            Server config
            </summary>
        </member>
        <member name="T:Chandler.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:Chandler.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Chandler.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            CreateWebHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
    </members>
</doc>
